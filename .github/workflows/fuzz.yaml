name: Run fuzz tester

on:
  # Allow manual runs via special PR comments
  issue_comment:
    types: [created, edited]
  # Allow manual runs via GitHub web interface, CLI, etc.
  workflow_dispatch:

env:
    BASE_BRANCH: ${{ github.base_ref }}

jobs:

  starting-fuzzer:
    name: Notify user of fuzzing
    if: ${{ github.event.issue.pull_request && contains(github.event.comment.body, '/run-fuzzer') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v5
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: "Running fuzzer as requested by ${{ github.actor }}"
            })

  # TODO: Remove
  not-starting-fuzzer:
    name: Notify user of no fuzzing
    if: ${{ !(github.event.issue.pull_request && contains(github.event.comment.body, '/run-fuzzer')) }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v5
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: "I saw a comment, but I am not running the fuzzer since I did not recognise a command to run it"
            })

  build-otp:
    if: ${{ github.event.issue.pull_request && contains(github.event.comment.body, '/run-fuzzer')}}
    uses: ./.github/workflows/base-build.yaml
    with:
      base-branch: ${{ github.ref_name }}

  fuzz:
    name: Fuzz test Erlang/OTP
    if: ${{ github.event.issue.pull_request && contains(github.event.comment.body, '/run-fuzzer')}}
    runs-on: ubuntu-latest
    needs: build-otp
    steps:
      - uses: actions/checkout@v3
      - name: Cache BASE image
        uses: actions/cache@v3
        with:
          path: otp_docker_base.tar
          key: ${{ runner.os }}-${{ hashFiles('.github/dockerfiles/Dockerfile.ubuntu-base', '.github/scripts/build-base-image.sh') }}
      - name: Docker login
        uses: docker/login-action@v2
        with:
          registry: docker.pkg.github.com
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build BASE image
        run: .github/scripts/build-base-image.sh "${BASE_BRANCH}" 64-bit
      - name: Cache pre-built tar archives
        uses: actions/cache@v3
        with:
          path: |
              otp_src.tar.gz
              otp_cache.tar.gz
          key: prebuilt-${{ github.job }}-${{ github.ref_name }}-${{ github.sha }}
          restore-keys: |
              prebuilt-${{ github.ref_name }}-${{ github.sha }}
      - name: Build image
        run: |
          .github/scripts/restore-from-prebuilt.sh `pwd` .github/otp.tar.gz
          rm -f otp_{src,cache}.tar.gz
          docker build --tag otp \
            --build-arg MAKEFLAGS=-j$(($(nproc) + 2)) \
            --file ".github/dockerfiles/Dockerfile.64-bit" \
            .github/
      - name: Run erlfuzz
        id: run-erlfuzz
        run: docker run -v $PWD:/github --entrypoint "" otp \
               bash -c 'scripts/run-fuzzer.sh'
        # TODO Upload fuzz results?
